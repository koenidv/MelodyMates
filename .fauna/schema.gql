type User {
	id: String! @unique
	profile_name: String!
	profile_image: String
	spotify_url: String!
	private: PrivateUserData! @relation(name: "user_private")
}

type PrivateUserData {
	user: User! @relation(name: "user_private")
	profile_song: Song
	follows: [User!]!
	phone_hash: String
}

type FollowRequest {
	from: User!
	recipient: User!
}

type Song {
	id: String! @unique
	name: String!
	artists: [Artist!]! @relation(name: "artist_songs")
	album: Album!
	length_ms: Int!
}

type Artist {
	id: String! @unique
	name: String!
	albums: [Album!]! @relation(name: "artist_albums")
	songs: [Song!]! @relation(name: "artist_songs")
}

type Album {
	id: String! @unique
	name: String!
	artists: [Artist]! @relation(name: "artist_albums")
	cover_image: String
	theme_color: String
}

type Post {
	song: Song!
	author: User!
	comment: String
}

type React {
	post: Post!
	author: User!
	emoji: String!
}

type Reply {
	post: Post!
	author: User!
	comment: String
	song: Song
}
